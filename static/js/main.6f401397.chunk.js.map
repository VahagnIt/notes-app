{"version":3,"sources":["context/alert/alertContext.js","context/fireBase/fireBaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","pages/About.js","components/Navbar.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/fireBase/firBaseReducer.js","context/fireBase/FireBaseState.js","App.js","serviceWorker.js","index.js"],"names":["AlertContext","createContext","FireBaseContext","Form","useState","value","setValue","show","useContext","addNote","onSubmit","e","preventDefault","trim","then","catch","className","type","placeholder","onChange","target","Notes","notes","removeNote","li","map","note","index","CSSTransition","key","id","classNames","timeout","title","date","onClick","TransitionGroup","component","role","Home","loading","getNotes","useEffect","Loader","About","Navbar","to","exact","Alert","alert","hide","in","visible","mountOnEnter","unmountOnExit","enter","exit","text","aria-label","aria-hidden","handlers","state","payload","alertReducer","action","Default","AlertState","children","useReducer","dispatch","Provider","filter","fireBaseReducer","url","process","FireBaseState","showLoader","a","axios","get","res","Object","keys","data","console","error","message","Date","toJSON","post","name","log","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f401397.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext();\r\n","import { createContext } from \"react\";\r\n\r\nexport const FireBaseContext = createContext();\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { FireBaseContext } from \"../context/fireBase/fireBaseContext\";\r\n\r\nexport const Form = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { show } = useContext(AlertContext);\r\n  const { addNote } = useContext(FireBaseContext);\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      addNote(value)\r\n        .then(() => show(\"Note was added successfully\", \"success\"))\r\n        .catch((e) => show(\"something goes wrong\", \"danger\"));\r\n    } else {\r\n      show(\"input can`t be empty\", \"warning\");\r\n    }\r\n    setValue(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onFormSubmit}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter New Note\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nexport const Notes = ({ notes, removeNote }) => {\r\n  // console.log(\"notes\", notes);\r\n  const li = notes.map((note, index) => (\r\n    <CSSTransition key={note.id} classNames={\"note\"} timeout={500}>\r\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n        <span>\r\n          <strong className=\"mr-2\">{note.title}</strong>\r\n          <small>{note.date}</small>\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-danger\"\r\n          onClick={() => removeNote(note.id)}\r\n        >\r\n          &times;\r\n        </button>\r\n      </li>\r\n    </CSSTransition>\r\n  ));\r\n  return (\r\n    <TransitionGroup component=\"ol\" className=\"list-group\">\r\n      {li}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"spinner-border text-dark\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Form } from \"../components/Form\";\r\nimport { Notes } from \"../components/Notes\";\r\nimport { FireBaseContext } from \"../context/fireBase/fireBaseContext\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nexport const Home = () => {\r\n  const { loading, notes, getNotes, removeNote } = useContext(FireBaseContext);\r\n\r\n  useEffect(() => {\r\n    getNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form />\r\n      <hr />\r\n      {loading ? <Loader /> : <Notes notes={notes} removeNote={removeNote} />}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Fluid jumbotron</h1>\r\n        <p className=\"lead\">\r\n          This is a modified jumbotron that occupies the entire horizontal space\r\n          of its parent.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div className=\"navbar-brand\">Notes App</div>\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/notes-app\" exact>\r\n          Notes\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/about\">\r\n          About\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n  return (\r\n    <CSSTransition\r\n      in={alert.visible}\r\n      mountOnEnter\r\n      unmountOnExit\r\n      timeout={{\r\n        enter: 500,\r\n        exit: 300,\r\n      }}\r\n      classNames={\"alert\"}\r\n    >\r\n      <div\r\n        className={`alert alert-${alert.type || \"warning\"} alert-dismissible`}\r\n      >\r\n        <strong className=\"mr-2\">Atention!!!</strong>\r\n        {alert.text}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n          onClick={hide}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, { payload }) => ({\r\n    ...state,\r\n    ...payload,\r\n    visible: true,\r\n  }),\r\n  [HIDE_ALERT]: (state) => ({\r\n    ...state,\r\n    visible: false,\r\n  }),\r\n  Default: (state) => state,\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handle = handlers[action.type] || handlers.Default;\r\n  return handle(state, action);\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\nexport const SHOW_LOADING = \"SHOW_LOADING\";\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\";\r\nexport const GET_NOTES = \"GET_NOTES\";\r\n","import React, { useReducer } from \"react\";\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer } from \"./alertReducer\";\r\nimport { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, { visible: false });\r\n\r\n  const show = (text, type = \"warning\") => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: { text, type },\r\n    });\r\n  };\r\n  const hide = () => {\r\n    dispatch({ type: HIDE_ALERT });\r\n  };\r\n  return (\r\n    <AlertContext.Provider value={{ hide, show, alert: state }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import { SHOW_LOADING, ADD_NOTE, REMOVE_NOTE, GET_NOTES } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_LOADING]: (state) => ({ ...state, loading: true }),\r\n  [ADD_NOTE]: (state, { payload }) => ({ notes: [...state.notes, payload] }),\r\n  [REMOVE_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: state.notes.filter((note) => note.id !== payload),\r\n  }),\r\n  [GET_NOTES]: (state, { payload }) => {\r\n    return {\r\n      ...state,\r\n      notes: payload,\r\n      loading: false,\r\n    };\r\n  },\r\n  Default: (state) => state,\r\n};\r\n\r\nexport const fireBaseReducer = (state, action) => {\r\n  const handle = handlers[action.type] || handlers.Default;\r\n  return handle(state, action);\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FireBaseContext } from \"./fireBaseContext\";\r\nimport { fireBaseReducer } from \"./firBaseReducer\";\r\nimport { SHOW_LOADING, ADD_NOTE, GET_NOTES, REMOVE_NOTE } from \"../types\";\r\n\r\nconst url = process.env.REACT_APP_DB_URL;\r\n\r\nexport const FireBaseState = ({ children }) => {\r\n  const initialState = {\r\n    notes: [],\r\n    loading: false,\r\n  };\r\n  const [state, dispatch] = useReducer(fireBaseReducer, initialState);\r\n\r\n  const showLoader = () => dispatch({ type: SHOW_LOADING });\r\n  const getNotes = async () => {\r\n    showLoader();\r\n    try {\r\n      const res = await axios.get(`${url}/notes.json`);\r\n      const payload = Object.keys(res.data).map((id) => {\r\n        return {\r\n          id,\r\n          ...res.data[id],\r\n        };\r\n      });\r\n      dispatch({\r\n        type: GET_NOTES,\r\n        payload,\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  const addNote = async (title) => {\r\n    const note = {\r\n      title,\r\n      date: new Date().toJSON(),\r\n    };\r\n    try {\r\n      const res = await axios.post(`${url}/notes.json`, note);\r\n      const payload = {\r\n        ...note,\r\n        id: res.data.name,\r\n      };\r\n      dispatch({\r\n        type: ADD_NOTE,\r\n        payload,\r\n      });\r\n      console.log(payload, state);\r\n    } catch (err) {}\r\n  };\r\n  const removeNote = async (id) => {\r\n    await axios.delete(`${url}/notes/${id}.json`);\r\n    dispatch({\r\n      type: REMOVE_NOTE,\r\n      payload: id,\r\n    });\r\n  };\r\n  //   console.log(\"state\", state);\r\n  return (\r\n    <FireBaseContext.Provider\r\n      value={{\r\n        showLoader,\r\n        getNotes,\r\n        addNote,\r\n        removeNote,\r\n        loading: state.loading,\r\n        notes: state.notes,\r\n      }}\r\n    >\r\n      {children}\r\n    </FireBaseContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { FireBaseState } from \"./context/fireBase/FireBaseState\";\n\nfunction App() {\n  return (\n    <FireBaseState>\n      <AlertState>\n        <Navbar />\n        <div className=\"container pt-4\">\n          <Alert />\n          <Switch>\n            <Route path=\"/notes-app\" exact component={Home} />\n            <Route path=\"/about\" exact component={About} />\n            <Redirect to=\"/notes-app\" />\n          </Switch>\n        </div>\n      </AlertState>\n    </FireBaseState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}